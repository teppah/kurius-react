{"version":3,"sources":["components/NavBar.jsx","components/KuriusHeading.jsx","components/PhotoGallery.jsx","components/AngledGradient.jsx","components/BigHeadline.jsx","App.jsx","serviceWorker.js","index.js"],"names":["NavBar","Menu","pointing","secondary","inverted","Container","Item","header","Image","size","src","style","maxHeight","maxWidth","position","as","name","styles","container","paddingBottom","clipPath","marginBottom","kuriusHeader","fontSize","fontWeight","marginTop","color","inspQuote","KuriusHeading","text","textAlign","Header","content","photos","original","thumbnail","PhotoGallery","items","autoPlay","showThumbnails","showNav","showPlayButton","showFullscreenButton","Component","AngledGradient","background","props","className","children","BigHeadline","state","headline","this","padding","textTransform","App","fluid","Grid","centered","Column","width","Segment","cetered","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7618b8e8.chunk.js","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport {\n  Segment,\n  Menu,\n  Container,\n  Image,\n  Dropdown,\n  Header\n} from \"semantic-ui-react\";\n\nconst NavBar = () => (\n  <Menu pointing secondary inverted>\n    <Container>\n      <Menu.Item header>\n        <Image\n          size=\"mini\"\n          src=\"ico.png\"\n          style={{ maxHeight: \"20px\", maxWidth: \"20px\" }}\n        />\n        Kurius\n      </Menu.Item>\n      <Menu.Menu position=\"right\">\n        <Menu.Item as=\"a\" name=\"home\">\n          Home\n        </Menu.Item>\n        <Menu.Item as=\"a\" name=\"our-team\">\n          Our Team\n        </Menu.Item>\n        <Menu.Item as=\"a\" name=\"our-vision\">\n          Our Vision\n        </Menu.Item>\n        <Menu.Item as=\"a\" name=\"events\">\n          Events\n        </Menu.Item>\n        <Menu.Item as=\"a\" name=\"partner\">\n          Partner\n        </Menu.Item>\n        <Menu.Item as=\"a\" name=\"join-us\">\n          Join Us\n        </Menu.Item>\n      </Menu.Menu>\n    </Container>\n  </Menu>\n);\n\nexport default NavBar;\n","import React from \"react\";\nimport { Container, Header, Button, Icon } from \"semantic-ui-react\";\n\nconst KuriusHeading = () => (\n  <Container text textAlign=\"center\" style={styles.container}>\n    <Header as=\"h1\" content=\"Kurius\" style={styles.kuriusHeader}>\n      Kurius\n    </Header>\n    <Header as=\"h2\" style={styles.inspQuote}>\n      \"The happiest moment I felt, is the moment when I realized my ability to\n      create.\" -Dr Hazem Ali\n    </Header>\n  </Container>\n);\n\nconst styles = {\n  container: {\n    // padding: \"5em 5em\",\n    paddingBottom: \"17em\",\n    clipPath: \"polygon(0 0, 100% 0, 100% 100%, )\",\n    marginBottom: \"-10em\"\n  },\n  kuriusHeader: {\n    fontSize: \"4em\",\n    fontWeight: \"normal\",\n    marginBottom: \"0\",\n    marginTop: \"2em\",\n    color: \"white\"\n  },\n  inspQuote: {\n    fontSize: \"1.7em\",\n    fontWeight: \"normal\",\n    marginTop: \"1.5em\",\n    color: \"white\"\n  }\n};\n\nexport default KuriusHeading;\n","import React, { Component } from \"react\";\nimport ImageGallery from \"react-image-gallery\";\n\nconst photos = [\n  {\n    original: \"photos/p-1.jpg\",\n    thumbnail: \"photos/p-1.jpg\"\n  },\n  {\n    original: \"photos/p-2.jpg\",\n    thumbnail: \"photos/p-2.jpg\"\n  }\n];\n\nclass PhotoGallery extends Component {\n  render() {\n    return (\n      <ImageGallery\n        items={photos}\n        autoPlay={true}\n        showThumbnails={false}\n        showNav={false}\n        showPlayButton={false}\n        showFullscreenButton={false}\n      />\n    );\n  }\n}\n\n\n\nexport default PhotoGallery;\n","import React from \"react\";\nimport \"./AngledGradient.css\";\n\nconst styles = {\n  bg: {\n    background: \"rgb(25,170,163)\",\n    background:\n      \"linear-gradient(45deg, rgba(25,170,163,1) 0%, rgba(203,89,184,1) 100%)\",\n    clipPath: \"polygon(0 0, 100% 0 100% 100% 0 90%\"\n  }\n};\n\nconst AngledGradient = props => (\n  <div className=\"AngledGradient\">{props.children}</div>\n);\n\nexport default AngledGradient;\n","import React, { Component } from \"react\";\nimport { Container, Header } from \"semantic-ui-react\";\n\nclass BigHeadline extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    const { headline, text } = this.props;\n    this.state = {headline, text};\n  }\n\n  render() {\n    return (\n      <Container textAlign=\"center\" style={styles.container}>\n        <Header as=\"h3\" style={styles.header}>\n          {this.state.headline}\n        </Header>\n        <Header as=\"h1\" style={styles.text}>\n          {this.state.text}\n        </Header>\n      </Container>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    padding: \"6em\"\n  },\n  header: {\n    textTransform: \"uppercase\",\n    marginBottom: \"2em\",\n    fontSize: \"2em\",\n    color: \"rgba(255, 255, 255, 0.6)\"\n  },\n  text: {\n    color: \"white\",\n    fontSize: \"3em\"\n  }\n};\n\nexport default BigHeadline;\n","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport KuriusHeading from \"./components/KuriusHeading\";\nimport PhotoGallery from \"./components/PhotoGallery\";\nimport AngledGradient from \"./components/AngledGradient\";\nimport BigHeadline from \"./components/BigHeadline\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Container, Segment, Grid } from \"semantic-ui-react\";\n\nfunction App() {\n  return (\n    <Container fluid>\n      <AngledGradient>\n        <NavBar />\n        <KuriusHeading />\n      </AngledGradient>\n      <Grid centered style={{ marginBottom: \"10em\" }}>\n        <Grid.Column width={12}>\n          <Segment>\n            <PhotoGallery />\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      <AngledGradient>\n        <BigHeadline\n          headline=\"Who We Are\"\n          text=\"We are a start-up non-profit organization created by students for students. Our goal is to empower youth by making tech education and resources accessible to all.\"\n        />\n      </AngledGradient>\n      <Grid cetered>\n        <Grid.Column>\n          \n        </Grid.Column>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}